// https://leetcode.com/submissions/detail/558930746/?from=explore&item_id=769

class Solution {

    /**
     * @param String[][] $board
     * @return Boolean
     */
    function isValidSudoku($board) 
    {
        $row_values = [];
        $column_values = [];
        $sudoku_square_values = [];
        
        for ($i = 0; $i < 9; $i++)
        {
            for ($j = 0; $j < 9; $j++)
            {
                $value = $board[$i][$j];

                if (is_numeric($value))
                {
                    // Calculate which square we're at (from 1-1 to 3-3)
                    $current_sudoku_square = ceil(($i+1)/3) . '-' . ceil(($j+1)/3);
                    
                    // If this is a duplicate value for this row, fail
                    if (isset($row_values[$i][$value])) return false;
                    else $row_values[$i][$value] = 1;
                    
                    // If this is a duplicate value for this column, fail
                    if (isset($column_values[$j][$value])) return false;
                    else $column_values[$j][$value] = 1;
                    
                    // If this is a duplicate value for this sudoku square, fail
                    if (isset($sudoku_square_values[$current_sudoku_square][$value])) return false;
                    else $sudoku_square_values[$current_sudoku_square][$value] = 1;
                }
            }

        }
        
        return true;
    }
}
